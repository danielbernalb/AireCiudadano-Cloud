apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-sidecar-config
data:
  objstore.yml: |-
    type: FILESYSTEM
    config:
      directory: /thanos/store
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-cache-config
data:
  cache-config.yaml: |
    type: IN-MEMORY
    config:
      max_size: 500MB
      max_item_size: 5MB
      validity: 24h
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: thanos-compactor-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/thanos-compactor
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: thanos-store-pv
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/thanos-store
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: thanos-compactor-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: thanos-store-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
# Deployment de Thanos Compactor
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-compactor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-compactor
  template:
    metadata:
      labels:
        app: thanos-compactor
    spec:
      initContainers:
        - name: init-permissions
          image: busybox
          command: ["sh", "-c", "chmod -R 777 /thanos/store"]
          volumeMounts:
            - name: thanos-compactor-storage
              mountPath: /thanos/store
      containers:
        - name: thanos-compactor
          image: thanosio/thanos:v0.35.1
          args:
#https://thanos.io/tip/components/compact.md/#flags
            - "compact"
            - "--data-dir=/thanos/store"
            - "--objstore.config-file=/thanos/config/objstore.yml"
            - "--log.level=debug"
#            - "--retention.resolution-raw=0d"
#            - "--retention.resolution-5m=0d"
#            - "--retention.resolution-1h=0d"
#            - "--delete-delay=48h"
#            - "--compact.concurrency=1"
#            - "--downsample.concurrency=1"
#            - "--downsampling.disable"
            - "--wait"  # Agregar esta línea para mantener el proceso en ejecución
          volumeMounts:
            - name: thanos-compactor-storage
              mountPath: /thanos/store
            - name: thanos-config
              mountPath: /thanos/config
      volumes:
        - name: thanos-compactor-storage
          persistentVolumeClaim:
            claimName: thanos-compactor-pvc
        - name: thanos-config
          configMap:
            name: thanos-sidecar-config
---
# Deployment de Thanos Sidecar
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-sidecar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-sidecar
  template:
    metadata:
      labels:
        app: thanos-sidecar
    spec:
      containers:
        - name: thanos-sidecar
          image: thanosio/thanos:v0.35.1
          args:
            - "sidecar"
            - "--tsdb.path=/prometheus"
            - "--prometheus.url=http://prometheus-cip:9090"
            - "--grpc-address=0.0.0.0:10901"
            - "--http-address=0.0.0.0:10902"
            - "--objstore.config-file=/thanos/config/objstore.yml"
          ports:
            - containerPort: 10901
              name: grpc
            - containerPort: 10902
              name: http
          volumeMounts:
            - name: prometheus-storage-volume
              mountPath: /prometheus
            - name: thanos-config
              mountPath: /thanos/config
            - name: thanos-store
              mountPath: /thanos/store
      volumes:
        - name: prometheus-storage-volume
          hostPath:
            path: /data/prometheus
            type: Directory
        - name: thanos-config
          configMap:
            name: thanos-sidecar-config
        - name: thanos-store
          emptyDir: {}
---
# Servicio para Thanos Sidecar
apiVersion: v1
kind: Service
metadata:
  name: thanos-sidecar
spec:
  selector:
    app: thanos-sidecar
  ports:
    - name: grpc
      port: 10901
      targetPort: 10901
    - name: http
      port: 10902
      targetPort: 10902
---
# Deployment de Thanos Store
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-store
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-store
  template:
    metadata:
      labels:
        app: thanos-store
    spec:
      containers:
        - name: thanos-store
          image: thanosio/thanos:v0.35.1
          args:
            - "store"
            - "--data-dir=/thanos/store"
            - "--objstore.config-file=/thanos/config/objstore.yml"
            - "--grpc-address=0.0.0.0:10901"
            - "--http-address=0.0.0.0:10902"
          ports:
            - containerPort: 10901
              name: grpc
            - containerPort: 10902
              name: http
          volumeMounts:
            - name: thanos-store
              mountPath: /thanos/store
            - name: thanos-config
              mountPath: /thanos/config
      volumes:
        - name: thanos-store
          persistentVolumeClaim:
            claimName: thanos-store-pvc
        - name: thanos-config
          configMap:
            name: thanos-sidecar-config
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-store
spec:
  selector:
    app: thanos-store
  ports:
    - name: grpc
      port: 10901
      targetPort: 10901
    - name: http
      port: 10902
      targetPort: 10902
---
# Deployment de Thanos Query Frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query-frontend
  labels:
    app: thanos-query-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-query-frontend
  template:
    metadata:
      labels:
        app: thanos-query-frontend
    spec:
      containers:
      - name: thanos-query-frontend
        image: thanosio/thanos:v0.35.1
        args:
        - query-frontend
        - --query-frontend.downstream-url=http://thanos-query:10902
        - --query-range.split-interval=24h
        - --query-range.response-cache-config-file=/etc/thanos/cache-config.yaml
        ports:
        - containerPort: 9091
        volumeMounts:
        - name: cache-config
          mountPath: /etc/thanos
      volumes:
      - name: cache-config
        configMap:
          name: thanos-cache-config
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-query-frontend
spec:
  selector:
    app: thanos-query-frontend
  ports:
    - name: http
      port: 9091
      targetPort: 9091
---
# Deployment de Thanos Query
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-query
  template:
    metadata:
      labels:
        app: thanos-query
    spec:
      containers:
        - name: thanos-query
          image: thanosio/thanos:v0.35.1
          args:
            - query
            - --http-address=0.0.0.0:10902
            - --grpc-address=0.0.0.0:10901
            - --store=thanos-sidecar:10901
            - --store=thanos-store:10901
            - --query.auto-downsampling
            - --query.partial-response
          ports:
            - containerPort: 10901
              name: grpc
            - containerPort: 10902
              name: http
          resources:
            {{- toYaml .Values.resources.prometheus | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-query
spec:
  type: NodePort
  selector:
    app: thanos-query
  ports:
    - port: 10902
      targetPort: 10902
      nodePort: 30001
