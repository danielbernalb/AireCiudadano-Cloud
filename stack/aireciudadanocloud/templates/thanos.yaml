apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-sidecar-config
data:
  objstore.yml: |-
    type: filesystem
    config:
      directory: /thanos/store
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: thanos-compactor-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/thanos-compactor
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: thanos-store-pv
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/thanos-store
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: thanos-compactor-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: thanos-store-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-compactor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-compactor
  template:
    metadata:
      labels:
        app: thanos-compactor
    spec:
      initContainers:
        - name: init-permissions
          image: busybox
          command: ["sh", "-c", "chmod -R 777 /thanos/store"]
          volumeMounts:
            - name: thanos-compactor-storage
              mountPath: /thanos/store
      containers:
        - name: thanos-compactor
          image: thanosio/thanos:v0.35.1
          args:
            - "compact"
            - "--data-dir=/thanos/store"
            - "--objstore.config-file=/thanos/config/objstore.yml"
            - "--log.level=debug"
            - "--wait"  # Agregar esta línea para mantener el proceso en ejecución
          volumeMounts:
            - name: thanos-compactor-storage
              mountPath: /thanos/store
            - name: thanos-config
              mountPath: /thanos/config
      volumes:
        - name: thanos-compactor-storage
          persistentVolumeClaim:
            claimName: thanos-compactor-pvc
        - name: thanos-config
          configMap:
            name: thanos-sidecar-config
---
# Deployment de Thanos Sidecar
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-sidecar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-sidecar
  template:
    metadata:
      labels:
        app: thanos-sidecar
    spec:
      containers:
        - name: thanos-sidecar
          image: thanosio/thanos:v0.35.1
          args:
            - "sidecar"
            - "--tsdb.path=/prometheus"
            - "--prometheus.url=http://prometheus-cip:9090"  # Cambia 'prometheus-cip' a 'prometheus' si el nombre del servicio es diferente
            - "--grpc-address=0.0.0.0:10901"
            - "--http-address=0.0.0.0:10902"
            - "--objstore.config-file=/thanos/config/objstore.yml"
          ports:
            - containerPort: 10901
              name: grpc
            - containerPort: 10902
              name: http
          volumeMounts:
            - name: prometheus-storage-volume
              mountPath: /prometheus
            - name: thanos-config
              mountPath: /thanos/config
      volumes:
        - name: prometheus-storage-volume
          hostPath:
            path: /data/prometheus
            type: Directory
        - name: thanos-config
          configMap:
            name: thanos-sidecar-config
---
# Service para Thanos Sidecar
apiVersion: v1
kind: Service
metadata:
  name: thanos-sidecar
spec:
  selector:
    app: thanos-sidecar
  ports:
    - name: grpc
      port: 10901
      targetPort: 10901
    - name: http
      port: 10902
      targetPort: 10902
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-store
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-store
  template:
    metadata:
      labels:
        app: thanos-store
    spec:
      containers:
        - name: thanos-store
          image: thanosio/thanos:v0.35.1
          args:
            - "store"
            - "--data-dir=/thanos/store"
            - "--objstore.config-file=/thanos/config/objstore.yml"
            - "--grpc-address=0.0.0.0:10901"
            - "--http-address=0.0.0.0:10902"
          ports:
            - containerPort: 10901
              name: grpc
            - containerPort: 10902
              name: http
          volumeMounts:
            - name: thanos-store
              mountPath: /thanos/store
            - name: thanos-config
              mountPath: /thanos/config
      volumes:
        - name: thanos-store
          persistentVolumeClaim:
            claimName: thanos-store-pvc
        - name: thanos-config
          configMap:
            name: thanos-sidecar-config
---
# Deployment de Thanos Query
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-query
  template:
    metadata:
      labels:
        app: thanos-query
    spec:
      containers:
        - name: thanos-query
          image: thanosio/thanos:v0.35.1
          args:
            - "query"
            - "--http-address=0.0.0.0:10902"
            - "--grpc-address=0.0.0.0:10901"
            - "--store=thanos-sidecar:10901"
          ports:
            - containerPort: 10901
              name: grpc
            - containerPort: 10902
              name: http
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-query
spec:
  type: NodePort
  selector:
    app: thanos-query
  ports:
    - port: 10902
      targetPort: 10902
      nodePort: 30001
